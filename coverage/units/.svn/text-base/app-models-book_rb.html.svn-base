<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang='en' xml:lang='en' xmlns='http://www.w3.org/1999/xhtml'>
  <head>
    <title>app/models/book.rb</title>
    <link href="screen.css" media="all" rel="stylesheet" type="text/css" />
    <link href="print.css" media="print" rel="stylesheet" type="text/css" />
    
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <script type="text/javascript" src="rcov.js"></script>
  </head>
  <body>
    <h1>Bookstore C0 Coverage Information - RCov</h1>
    <h2>app/models/book.rb</h2>

    

    <div class="report_table_wrapper">
      <table class='report' id='report_table'>
        <thead>
          <tr>
            <th class="left_align">Name</th>
            <th class="right_align">Total Lines</th>
            <th class="right_align">Lines of Code</th>
            <th class="left_align">Total Coverage</th>
            <th class="left_align">Code Coverage</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="left_align"><a href="app-models-book_rb.html">app/models/book.rb</a></td>
            <td class='right_align'><tt>42</tt></td>
            <td class='right_align'><tt>35</tt></td>
            <td class="left_align"><div class="percent_graph_legend"><tt class=''>76.19%</tt></div>
          <div class="percent_graph">
            <div class="covered" style="width:76px"></div>
            <div class="uncovered" style="width:24px"></div>
          </div></td>
            <td class="left_align"><div class="percent_graph_legend"><tt class=''>80.00%</tt></div>
          <div class="percent_graph">
            <div class="covered" style="width:80px"></div>
            <div class="uncovered" style="width:20px"></div>
          </div></td>
          </tr>
        </tbody>
      </table>
    </div>
    
    <h3>Key</h3>
    
    <div class="key"><pre><span class='marked'>Code reported as executed by Ruby looks like this...</span><span class='marked1'>and this: this line is also marked as covered.</span><span class='inferred'>Lines considered as run by rcov, but not reported by Ruby, look like this,</span><span class='inferred1'>and this: these lines were inferred by rcov (using simple heuristics).</span><span class='uncovered'>Finally, here's a line marked as not executed.</span></pre></div>

    <h3>Coverage Details</h3>

    <table class="details">
      <tbody>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line1">1</a> class Book &lt; ActiveRecord::Base</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line2">2</a> attr_accessible :inventory, :title, :publisher, :price, :image_url</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line3">3</a> </pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line4">4</a>   has_and_belongs_to_many :authors</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line5">5</a>   validates_uniqueness_of :id</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line6">6</a>   validates_uniqueness_of :title, :scope =&gt; :publisher</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line7">7</a>   validates_presence_of :title, :inventory, :price, :image_url, :publisher</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line8">8</a>   validates_numericality_of :price</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line9">9</a>   validates_numericality_of :inventory, :only_integer =&gt; true</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line10">10</a>   validates_format_of :image_url,</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line11">11</a>     :with		=&gt; %r{\.(gif|jpg|png)$}i,</pre></td>
          </tr>
        
          
          
          <tr class="inferred">
            <td><pre><a name="line12">12</a>     :message	=&gt; &quot;must be a URL for a GIF, JPG, or PNG image&quot;</pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line13">13</a>   </pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line14">14</a>   def decr_inventory(quantity)</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line15">15</a>     self.inventory = self.inventory - quantity</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line16">16</a> 	redirect_to :controller =&gt; 'shop', :action =&gt; 'index' unless self.save</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line17">17</a>   end</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line18">18</a>   </pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line19">19</a>   protected</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line20">20</a>   def validate</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line21">21</a>     errors.add(:price, &quot;should be at least $0.01&quot;) if price.nil? || price &lt; 0.01</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line22">22</a>   end</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line23">23</a>   </pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line24">24</a>   def self.find_books_for_sale</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line25">25</a>     find(:all, :order =&gt; &quot;title&quot;)</pre></td>
          </tr>
        
          
          
          <tr class="inferred">
            <td><pre><a name="line26">26</a>   end</pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line27">27</a>   </pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line28">28</a>   # Searches for books when called from the controller using like</pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line29">29</a>   def self.search(query)</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line30">30</a>     title = query.to_s.gsub(/%/,&quot;\%&quot;)</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line31">31</a> 	books_arr = []</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line32">32</a> 	books_arr &lt;&lt; Book.find_by_title(title) unless Book.find_by_title(title) == nil</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line33">33</a> 	title.split(' ').each do |i|</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line34">34</a> 	  books1 = Book.find(:all, :conditions =&gt; [&quot;title like ?&quot;, &quot;%#{i}%&quot;])</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line35">35</a> 	  books1.each do |book|</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line36">36</a> 		books_arr &lt;&lt; book unless books_arr.include?(book)</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line37">37</a> 	  end</pre></td>
          </tr>
        
          
          
          <tr class="inferred">
            <td><pre><a name="line38">38</a> 	end</pre></td>
          </tr>
        
          
          
          <tr class="uncovered">
            <td><pre><a name="line39">39</a> 	return books_arr</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line40">40</a>   end</pre></td>
          </tr>
        
          
          
          <tr class="marked">
            <td><pre><a name="line41">41</a> </pre></td>
          </tr>
        
          
          
          <tr class="inferred">
            <td><pre><a name="line42">42</a> end</pre></td>
          </tr>
        
      </tbody>
    </table>

    <p>Generated on 2011-07-10 20:43:14 -0500 with <a href="http://github.com/relevance/rcov">rcov 0.9.8</a></p>

  </body>
</html>
